buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

// Read properties file
ext {
    configFile = file "build.properties"

    configFile.withReader {
        // Load config.  It shall from now be referenced as simply config or project.config
        def prop = new Properties()
        prop.load(it)
        config = new ConfigSlurper().parse prop
    }
}

version = config.mod.version
group = "vic.mod.chat"
archivesBaseName = "vChat"


minecraft {
    version = "${config.minecraft.version}-${config.forge.version}"
    runDir = "eclipse"

    replaceIn "Constants.java"
    replace "\${version}", "${config.mod.version}"
}

jar {
        manifest {
		attributes("FMLCorePlugin": "vic.mod.chat.transformer.VchatLoadingPlugin", "FMLCorePluginContainsFMLMod": "true")
    }
}

runServer {
    jvmArgs '-Dfml.coreMods.load=vic.mod.chat.transformer.VchatLoadingPlugin'
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
}

task apiJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.output
    include 'vic/mod/chat/api/**' 
    classifier = 'API'
}

artifacts {
    archives apiJar
}

uploadArchives {
    repositories {
       mavenDeployer {
             repository(url: "http://ngnl.ovh:4734/nexus/content/repositories/Vic") {
             authentication(userName: "admin", password: "mdp")
}
       }
    }
}
task writePom << {
    pom {
        project {
            inceptionYear '2014'
        }
    }.writeTo("$buildDir/pom.xml")
}
